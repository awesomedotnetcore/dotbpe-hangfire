// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtobufObjectfactory

#region Designer generated code

using DotBPE.Protobuf;
using Google.Protobuf.Reflection;
using System.Collections.Generic;


namespace DotBPE.Hangfire
{
    public class ProtobufDescriptorFactory : IProtobufDescriptorFactory
    {
        private static Dictionary<string, MessageDescriptor> DCACHE = new Dictionary<string, MessageDescriptor>();

        static ProtobufDescriptorFactory()
        {
            
            DCACHE.Add("2000|100|1",  CommonTaskReq.Descriptor); //请求
            DCACHE.Add("2000|100|2",  TaskVoidRes.Descriptor); //响应
            
            DCACHE.Add("2001|101|1",  EnqueueTaskReq.Descriptor); //请求
            DCACHE.Add("2001|101|2",  TaskVoidRes.Descriptor); //响应
            
            DCACHE.Add("2001|102|1",  ScheduleTaskReq.Descriptor); //请求
            DCACHE.Add("2001|102|2",  TaskVoidRes.Descriptor); //响应
            
            DCACHE.Add("2001|103|1",  ScheduleTaskReq.Descriptor); //请求
            DCACHE.Add("2001|103|2",  TaskVoidRes.Descriptor); //响应
            
            DCACHE.Add("2001|104|1",  EnqueueTaskReq.Descriptor); //请求
            DCACHE.Add("2001|104|2",  TaskVoidRes.Descriptor); //响应
            
            DCACHE.Add("2001|105|1",  ScheduleTaskReq.Descriptor); //请求
            DCACHE.Add("2001|105|2",  TaskVoidRes.Descriptor); //响应
            
            DCACHE.Add("2001|106|1",  ScheduleTaskReq.Descriptor); //请求
            DCACHE.Add("2001|106|2",  TaskVoidRes.Descriptor); //响应
            
            
        }

        public MessageDescriptor GetRequestDescriptor(int serviceId, int messageId)
        {
            string key = $"{serviceId}|{messageId}|1";
            if (DCACHE.ContainsKey(key))
            {
                return DCACHE[key];
            }
            return null;
        }

        public MessageDescriptor GetResponseDescriptor(int serviceId, int messageId)
        {
            string key = $"{serviceId}|{messageId}|2";
            if (DCACHE.ContainsKey(key))
            {
                return DCACHE[key];
            }
            return null;
        }
    }
}

#endregion Designer generated code